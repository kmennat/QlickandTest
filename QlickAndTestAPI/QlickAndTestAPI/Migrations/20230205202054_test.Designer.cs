// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QlickAndTestApi.Data;

#nullable disable

namespace QlickAndTestAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230205202054_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("QlickAndTestApi.BusinessObjects.Identity", b =>
                {
                    b.Property<int>("IdentityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CardID")
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomizableOne")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomizableTwo")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdentityTypeID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.HasKey("IdentityID");

                    b.ToTable("Identity");
                });

            modelBuilder.Entity("QlickAndTestApi.BusinessObjects.IdentityPhoto", b =>
                {
                    b.Property<int>("IdentityPhotoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("FileBytes")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<int>("IdentityID")
                        .HasColumnType("int");

                    b.HasKey("IdentityPhotoID");

                    b.HasIndex("IdentityID")
                        .IsUnique();

                    b.ToTable("IdentityPhoto");
                });

            modelBuilder.Entity("QlickAndTestApi.BusinessObjects.IdentityPhoto", b =>
                {
                    b.HasOne("QlickAndTestApi.BusinessObjects.Identity", null)
                        .WithOne("IdentityPhoto")
                        .HasForeignKey("QlickAndTestApi.BusinessObjects.IdentityPhoto", "IdentityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QlickAndTestApi.BusinessObjects.Identity", b =>
                {
                    b.Navigation("IdentityPhoto");
                });
#pragma warning restore 612, 618
        }
    }
}
